<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.homaer.fundsrv.mapper.UserStockLogDtoMapper" >
  <resultMap id="BaseResultMap" type="com.homaer.fundsrv.dataobject.UserStockLogDto" >
    <id column="log_id" property="logId" jdbcType="BIGINT" />
    <result column="user_stock_id" property="userStockId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="fund_act" property="fundAct" jdbcType="VARCHAR" />
    <result column="opactid" property="opactid" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="stock_money" property="stockMoney" jdbcType="DECIMAL" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="remainder" property="remainder" jdbcType="DECIMAL" />
    <result column="fund_amount" property="fundAmount" jdbcType="DECIMAL" />
    <result column="buy_price" property="buyPrice" jdbcType="DECIMAL" />
    <result column="sell_price" property="sellPrice" jdbcType="DECIMAL" />
    <result column="opstatus" property="opstatus" jdbcType="INTEGER" />
    <result column="pay_date" property="payDate" jdbcType="VARCHAR" />
    <result column="read_status" property="readStatus" jdbcType="INTEGER" />
    <result column="gmt_date" property="gmtDate" jdbcType="VARCHAR" />
    <result column="gmt_modify" property="gmtModify" jdbcType="VARCHAR" />
    <result column="gmt_success" property="gmtSuccess" jdbcType="VARCHAR" />
    <result column="gmt_fail" property="gmtFail" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    log_id, user_stock_id, user_id, fund_act, opactid, type, stock_money, currency, remainder, 
    fund_amount, buy_price, sell_price, opstatus, pay_date, read_status, gmt_date, gmt_modify, 
    gmt_success, gmt_fail, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.homaer.fundsrv.dataobject.UserStockLogDtoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_stock_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_stock_log
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_stock_log
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.homaer.fundsrv.dataobject.UserStockLogDtoCriteria" >
    delete from user_stock_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.homaer.fundsrv.dataobject.UserStockLogDto" >
    insert into user_stock_log (log_id, user_stock_id, user_id, 
      fund_act, opactid, type, 
      stock_money, currency, remainder, 
      fund_amount, buy_price, sell_price, 
      opstatus, pay_date, read_status, 
      gmt_date, gmt_modify, gmt_success, 
      gmt_fail, state)
    values (#{logId,jdbcType=BIGINT}, #{userStockId,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, 
      #{fundAct,jdbcType=VARCHAR}, #{opactid,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{stockMoney,jdbcType=DECIMAL}, #{currency,jdbcType=VARCHAR}, #{remainder,jdbcType=DECIMAL}, 
      #{fundAmount,jdbcType=DECIMAL}, #{buyPrice,jdbcType=DECIMAL}, #{sellPrice,jdbcType=DECIMAL}, 
      #{opstatus,jdbcType=INTEGER}, #{payDate,jdbcType=VARCHAR}, #{readStatus,jdbcType=INTEGER}, 
      #{gmtDate,jdbcType=VARCHAR}, #{gmtModify,jdbcType=VARCHAR}, #{gmtSuccess,jdbcType=VARCHAR}, 
      #{gmtFail,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.homaer.fundsrv.dataobject.UserStockLogDto" >
    insert into user_stock_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="userStockId != null" >
        user_stock_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="fundAct != null" >
        fund_act,
      </if>
      <if test="opactid != null" >
        opactid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="stockMoney != null" >
        stock_money,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="remainder != null" >
        remainder,
      </if>
      <if test="fundAmount != null" >
        fund_amount,
      </if>
      <if test="buyPrice != null" >
        buy_price,
      </if>
      <if test="sellPrice != null" >
        sell_price,
      </if>
      <if test="opstatus != null" >
        opstatus,
      </if>
      <if test="payDate != null" >
        pay_date,
      </if>
      <if test="readStatus != null" >
        read_status,
      </if>
      <if test="gmtDate != null" >
        gmt_date,
      </if>
      <if test="gmtModify != null" >
        gmt_modify,
      </if>
      <if test="gmtSuccess != null" >
        gmt_success,
      </if>
      <if test="gmtFail != null" >
        gmt_fail,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="userStockId != null" >
        #{userStockId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="fundAct != null" >
        #{fundAct,jdbcType=VARCHAR},
      </if>
      <if test="opactid != null" >
        #{opactid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="stockMoney != null" >
        #{stockMoney,jdbcType=DECIMAL},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="remainder != null" >
        #{remainder,jdbcType=DECIMAL},
      </if>
      <if test="fundAmount != null" >
        #{fundAmount,jdbcType=DECIMAL},
      </if>
      <if test="buyPrice != null" >
        #{buyPrice,jdbcType=DECIMAL},
      </if>
      <if test="sellPrice != null" >
        #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="opstatus != null" >
        #{opstatus,jdbcType=INTEGER},
      </if>
      <if test="payDate != null" >
        #{payDate,jdbcType=VARCHAR},
      </if>
      <if test="readStatus != null" >
        #{readStatus,jdbcType=INTEGER},
      </if>
      <if test="gmtDate != null" >
        #{gmtDate,jdbcType=VARCHAR},
      </if>
      <if test="gmtModify != null" >
        #{gmtModify,jdbcType=VARCHAR},
      </if>
      <if test="gmtSuccess != null" >
        #{gmtSuccess,jdbcType=VARCHAR},
      </if>
      <if test="gmtFail != null" >
        #{gmtFail,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.homaer.fundsrv.dataobject.UserStockLogDtoCriteria" resultType="java.lang.Integer" >
    select count(*) from user_stock_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_stock_log
    <set >
      <if test="record.logId != null" >
        log_id = #{record.logId,jdbcType=BIGINT},
      </if>
      <if test="record.userStockId != null" >
        user_stock_id = #{record.userStockId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.fundAct != null" >
        fund_act = #{record.fundAct,jdbcType=VARCHAR},
      </if>
      <if test="record.opactid != null" >
        opactid = #{record.opactid,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.stockMoney != null" >
        stock_money = #{record.stockMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.currency != null" >
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.remainder != null" >
        remainder = #{record.remainder,jdbcType=DECIMAL},
      </if>
      <if test="record.fundAmount != null" >
        fund_amount = #{record.fundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.buyPrice != null" >
        buy_price = #{record.buyPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.sellPrice != null" >
        sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.opstatus != null" >
        opstatus = #{record.opstatus,jdbcType=INTEGER},
      </if>
      <if test="record.payDate != null" >
        pay_date = #{record.payDate,jdbcType=VARCHAR},
      </if>
      <if test="record.readStatus != null" >
        read_status = #{record.readStatus,jdbcType=INTEGER},
      </if>
      <if test="record.gmtDate != null" >
        gmt_date = #{record.gmtDate,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtModify != null" >
        gmt_modify = #{record.gmtModify,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtSuccess != null" >
        gmt_success = #{record.gmtSuccess,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtFail != null" >
        gmt_fail = #{record.gmtFail,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_stock_log
    set log_id = #{record.logId,jdbcType=BIGINT},
      user_stock_id = #{record.userStockId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      fund_act = #{record.fundAct,jdbcType=VARCHAR},
      opactid = #{record.opactid,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      stock_money = #{record.stockMoney,jdbcType=DECIMAL},
      currency = #{record.currency,jdbcType=VARCHAR},
      remainder = #{record.remainder,jdbcType=DECIMAL},
      fund_amount = #{record.fundAmount,jdbcType=DECIMAL},
      buy_price = #{record.buyPrice,jdbcType=DECIMAL},
      sell_price = #{record.sellPrice,jdbcType=DECIMAL},
      opstatus = #{record.opstatus,jdbcType=INTEGER},
      pay_date = #{record.payDate,jdbcType=VARCHAR},
      read_status = #{record.readStatus,jdbcType=INTEGER},
      gmt_date = #{record.gmtDate,jdbcType=VARCHAR},
      gmt_modify = #{record.gmtModify,jdbcType=VARCHAR},
      gmt_success = #{record.gmtSuccess,jdbcType=VARCHAR},
      gmt_fail = #{record.gmtFail,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.homaer.fundsrv.dataobject.UserStockLogDto" >
    update user_stock_log
    <set >
      <if test="userStockId != null" >
        user_stock_id = #{userStockId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="fundAct != null" >
        fund_act = #{fundAct,jdbcType=VARCHAR},
      </if>
      <if test="opactid != null" >
        opactid = #{opactid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="stockMoney != null" >
        stock_money = #{stockMoney,jdbcType=DECIMAL},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="remainder != null" >
        remainder = #{remainder,jdbcType=DECIMAL},
      </if>
      <if test="fundAmount != null" >
        fund_amount = #{fundAmount,jdbcType=DECIMAL},
      </if>
      <if test="buyPrice != null" >
        buy_price = #{buyPrice,jdbcType=DECIMAL},
      </if>
      <if test="sellPrice != null" >
        sell_price = #{sellPrice,jdbcType=DECIMAL},
      </if>
      <if test="opstatus != null" >
        opstatus = #{opstatus,jdbcType=INTEGER},
      </if>
      <if test="payDate != null" >
        pay_date = #{payDate,jdbcType=VARCHAR},
      </if>
      <if test="readStatus != null" >
        read_status = #{readStatus,jdbcType=INTEGER},
      </if>
      <if test="gmtDate != null" >
        gmt_date = #{gmtDate,jdbcType=VARCHAR},
      </if>
      <if test="gmtModify != null" >
        gmt_modify = #{gmtModify,jdbcType=VARCHAR},
      </if>
      <if test="gmtSuccess != null" >
        gmt_success = #{gmtSuccess,jdbcType=VARCHAR},
      </if>
      <if test="gmtFail != null" >
        gmt_fail = #{gmtFail,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.homaer.fundsrv.dataobject.UserStockLogDto" >
    update user_stock_log
    set user_stock_id = #{userStockId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=VARCHAR},
      fund_act = #{fundAct,jdbcType=VARCHAR},
      opactid = #{opactid,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      stock_money = #{stockMoney,jdbcType=DECIMAL},
      currency = #{currency,jdbcType=VARCHAR},
      remainder = #{remainder,jdbcType=DECIMAL},
      fund_amount = #{fundAmount,jdbcType=DECIMAL},
      buy_price = #{buyPrice,jdbcType=DECIMAL},
      sell_price = #{sellPrice,jdbcType=DECIMAL},
      opstatus = #{opstatus,jdbcType=INTEGER},
      pay_date = #{payDate,jdbcType=VARCHAR},
      read_status = #{readStatus,jdbcType=INTEGER},
      gmt_date = #{gmtDate,jdbcType=VARCHAR},
      gmt_modify = #{gmtModify,jdbcType=VARCHAR},
      gmt_success = #{gmtSuccess,jdbcType=VARCHAR},
      gmt_fail = #{gmtFail,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
</mapper>